// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Or.hdl

 /**
 * Or gate:
 * out = 1 if (a == 1 or b == 1)
 *       0 otherwise
 */

CHIP Or {
    IN a, b;
    OUT out;

    PARTS:
    // Put your code here:
    // Again, it's a good idea to use a truth table to compare Or with
    // other gate.
    // a | b | Or  | Nand
    // ------------------
    // 0 | 0 |  0  |  1
    // 1 | 0 |  1  |  1
    // 0 | 1 |  1  |  1
    // 1 | 1 |  1  |  0

    // Notice that the first entry of Or output 0 can be achieved by Nand (1, 1), while
    // the last entry of Or output 1 can be achieved by Nand (0, 0).
    // Meanwhile, swapping a, b doesn't change the output (regardless 1,0 or 0,1, the output is still 1).

    // Then we can NOT the initial input of a and b to be Not a and Not b, then input them to Nand.

    Not (in=a, out=Nota);
    Not (in=b, out=Notb);
    Nand(a=Nota, b=Notb, out=out);
}
