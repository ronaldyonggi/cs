// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:
    // Hints from lecture code:
    // can be built from register, incrementor (remember Inc16 from week2), and some logic gates.

    // Note that ORDER MATTERS! If both inc and load are 1, want to make sure
    // the output is still 'in', not incremented output!
    // Thus, increment Mux16 should be after the 'load' Mux16!
    Inc16(in=cycle, out=incremented); // 'cycle' is the cycled final output
    Mux16(a=cycle, b=incremented, sel=inc, out=incout);
    // Use the output from increment to the 'load' Mux16
    Mux16(a=incout, b=in, sel=load, out=loadout);
    // Then use the ouput from load to 'reset' Mux16
    Mux16(a=loadout, b=false, sel=reset, out=resetout);
    // Last but not least, use Register to separate output to final output
    // and cycle output
    Register(in=resetout, load=true, out=out, out=cycle);

}
